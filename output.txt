{"type":"delta_start","content":""}{"type":"delta","content":"<"}{"type":"delta","content":"aithinking>Creating a React modal component is a good candidate for an artifact"}{"type":"delta","content":" because it's substantial, reusable, and self-contained.  This is"}{"type":"delta","content":" a new artifact.</aithinking>\n\n<aiartifact identifier=\"react-modal-component\" type=\"application/vnd.ai.react\" title=\""}{"type":"delta","content":"React Component: Modal\">\nimport React, { useState } from 'react';\nimport { Dialog, DialogOverlay, DialogContent, DialogHeader, DialogTitle"}{"type":"delta","content":", DialogFooter, DialogBody } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\n\nconst Modal = ({ open, onClose, title, children }) => {\n\n  return (\n"}{"type":"delta","content":"    <Dialog open={open} onClose={onClose}>\n      <DialogOverlay />\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n        "}{"type":"delta","content":"</DialogHeader>\n        <DialogBody>\n          {children}\n        </DialogBody>\n        <DialogFooter>\n          <Button onClick={onClose}>Close</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst ModalExample"}{"type":"delta","content":" = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Open Modal</Button>\n      <Modal open={isOpen} onClose={() => setIsOpen(false)} title=\"My Modal\">\n"}{"type":"delta","content":"        <p>This is the content of my modal.</p>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalExample;\n\n</aiartifact>\n\nI've created a React modal component using the shadcn/ui library for styling.  This component includes a `Dialog"}{"type":"delta","content":"`, `DialogOverlay`, `DialogContent`, `DialogHeader`, `DialogTitle`, `DialogBody`, and `DialogFooter`. The  `ModalExample` component shows how to use the `Modal` component. To use this code, you'll need to install the shadcn/ui library.  I can help you"}{"type":"delta","content":" with the installation if you need it.  Let me know if you'd like me to provide instructions for that.\n"}{"type":"delta","content":""}{}
